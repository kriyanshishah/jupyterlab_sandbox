{"version":3,"file":"lib_index_js.f876918e24def46862cc.js","mappings":"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","sources":["webpack://iframe-jupyterlab/./src/index.ts"],"sourcesContent":["import {\n  ILayoutRestorer,\n  JupyterFrontEnd,\n  JupyterFrontEndPlugin\n} from '@jupyterlab/application'\n\nimport {\n  ICommandPalette,\n  IFrame,\n  showDialog,\n  Dialog,\n  IWidgetTracker,\n  WidgetTracker,\n  ToolbarButton\n} from '@jupyterlab/apputils'\n\nimport { DocumentRegistry } from '@jupyterlab/docregistry'\n\nimport { NotebookPanel, INotebookModel } from '@jupyterlab/notebook'\n\nimport { buildIcon } from '@jupyterlab/ui-components'\n\nimport { CommandRegistry } from  '@lumino/commands'\n\nimport { IDisposable } from '@lumino/disposable'\n\nimport {\n  Token,\n} from '@lumino/coreutils';\n\nimport {\n  Widget,\n  Panel\n} from '@lumino/widgets';\n\n\n// import '../style/index.css';\n\n\nexport class Sandbox extends Panel {\n  private _sandBox!: SandboxNS.TSandboxOptions\n  private _frame: IFrame\n\n  constructor() {\n    super()\n    this._frame = new IFrame()\n    this.addWidget(this._frame)\n  }\n\n  get iframeNode() {\n    return this.node.querySelector('iframe')\n  }\n\n  get sandboxAttr() {\n    return Object.keys(this._sandBox || {}).join(' ');\n  }\n\n  get sandBox() {\n    return this._sandBox\n  }\n\n  set sandBox(attrs: SandboxNS.TSandboxOptions) {\n    this._sandBox = attrs\n    this.iframeNode?.setAttribute('sandbox', this.sandboxAttr)\n  }\n\n  get url() {\n    return this._frame.url\n  }\n\n  set url(url: string) {\n    this._frame.url = url\n  }\n}\n\n\nclass SandboxModal extends Widget {\n  constructor() {\n    let body = document.createElement(\"div\")\n    let label = document.createElement(\"label\")\n    label.textContent = 'Input a valid url'\n    let input = document.createElement(\"input\")\n    // perhaps should just match window.location.protocol?\n    input.placeholder = \"protocol:host\"\n    body.appendChild(label)\n    body.appendChild(input)\n    super({ node: body })\n  }\n\n  get inputNode(): HTMLInputElement {\n    return this.node.querySelector('input') as HTMLInputElement;\n  }\n\n  getValue(): string {\n    return this.inputNode.value;\n  }\n}\n\n\n/** A namespace for all `iframe`-related things\n */\nexport namespace SandboxNS {\n  /** The list of HTML iframe sandbox options\n   *\n   *  https://developer.mozilla.org/en-US/docs/Web/HTML/Element/iframe#attr-sandbox\n   */\n  export type TSandboxPerm = 'allow-forms' | 'allow-modals' | 'orientation-lock' |\n    'allow-pointer-lock' | 'allow-popups' | 'allow-popups-to-escape-sandbox' |\n    'allow-presentation' | 'allow-same-origin' | 'allow-scripts' | 'allow-top-navigation';\n\n\n  /** A type that can enable sandbox permissions */\n  export type TSandboxOptions = {[P in TSandboxPerm]?: boolean};\n\n  /** Generally useful subset of permissions that can run things like JupyterLab and Bokeh */\n  export const DEFAULT_SANDBOX: TSandboxOptions = {\n    'allow-forms': true,\n    'allow-presentation': true,\n    'allow-same-origin': true,\n    'allow-scripts': true,\n  };\n\n  // @todo: implement error handling\n  // export type TSandBoxProblem = 'no-src' | 'insecure-origin' | 'protocol-mismatch';\n}\n\n\nnamespace Private {\n  let counter = 0\n  export const namespace = 'sandbox-ext';\n\n  export function createSandbox(url: string, options: SandboxNS.TSandboxOptions): Sandbox {\n    let frame = new Sandbox()\n    frame.id = `${namespace}-${++counter}`\n    frame.title.label = 'Sandbox'\n    frame.title.closable = true\n    frame.sandBox = options\n    frame.url = url\n    return frame\n  }\n}\n\n/**\n * The command IDs used by the launcher plugin.\n */\nnamespace CommandIDs {\n  export const create = 'sandbox:create'\n  export const restore = 'sandbox:restore'\n}\n\nclass ButtonRender implements DocumentRegistry.IWidgetExtension<NotebookPanel, INotebookModel>{\n  constructor(commands: CommandRegistry){\n    this._commands = commands;\n  }\n\n  createNew(panel: NotebookPanel): IDisposable {\n    const button = new ToolbarButton({\n      className: 'renderButton',\n      tooltip: \"Render Iframe\",\n      icon: buildIcon,\n      onClick: () => {\n        this._commands.execute(CommandIDs.create)\n      }\n    });\n    panel.toolbar.insertAfter('cellType', 'voilaRender', button);\n    return button\n  }\n  private _commands: CommandRegistry;\n}\n\n/**\n * A class that tracks sandbox widgets.\n */\nexport interface ISandboxTracker extends IWidgetTracker<Sandbox>{}\n\n\n/**\n * The editor tracker token.\n */\nexport const ISandboxTracker = new Token<ISandboxTracker>('jupyterlab_sandbox:ISandboxTracker');\n\n\nconst extension: JupyterFrontEndPlugin<ISandboxTracker> = {\n  id: 'jupyterlab_sandbox',\n  autoStart: true,\n  requires: [ICommandPalette, ILayoutRestorer],\n  provides: ISandboxTracker,\n  activate: (app: JupyterFrontEnd, palette: ICommandPalette, restorer: ILayoutRestorer) : WidgetTracker<Sandbox> => {\n    const tracker = new WidgetTracker<Sandbox>({ namespace: Private.namespace })\n\n    const { commands, docRegistry}  = app\n\n    // Handle state restoration.\n    restorer.restore(tracker, {\n      command: CommandIDs.restore,\n      args: (widget) => ({url: widget.url, sandbox: widget.sandBox}),\n      name: () => Private.namespace\n    });\n\n    // not added to palette, only exists to reload page without modal creation\n    app.commands.addCommand(CommandIDs.restore, {\n      execute: (args) => {\n        const url = args['url'] as string\n        // fixme: should pass in args['sandbox'] to createSandbox but it's always undefined\n        // const options = args['sandbox'] as Sandbox.TSandboxOptions\n        let frame = Private.createSandbox(url, SandboxNS.DEFAULT_SANDBOX)\n        tracker.add(frame)\n        app.shell.add(frame)\n      }\n    })\n\n    app.commands.addCommand(CommandIDs.create, {\n      label: 'Open Web Page',\n      execute: (args) => {\n        showDialog({\n          title: 'Open a Web Page',\n          body: new SandboxModal(),\n          buttons: [Dialog.cancelButton(), Dialog.okButton()],\n          focusNodeSelector: 'input'\n        }).then(result => {\n          if (!result.value) {\n            return null;\n          }\n          let frame = Private.createSandbox(result.value, SandboxNS.DEFAULT_SANDBOX)\n          tracker.add(frame)\n          app.shell.add(frame)\n          return Promise.resolve()\n        })\n      }\n    })\n    palette.addItem({ command: CommandIDs.create, category: 'Sandbox' });\n    const renderButton = new ButtonRender(commands)\n    docRegistry.addWidgetExtension('Notebook', renderButton)\n    return tracker\n  }\n};\n\nexport default extension;"],"names":[],"sourceRoot":""}